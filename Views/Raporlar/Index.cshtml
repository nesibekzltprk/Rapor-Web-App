@{
    Layout = null;
}


<!DOCTYPE html>
<html lang="tr">

<head>
    <meta charset="UTF-8" />
    <title>Rapor Paneli</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.7.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>


    <style>
        body {
            padding-top: 56px;
        }

        #sidebar {
            position: fixed;
            top: 56px;
            left: 0;
            width: 220px;
            height: calc(100% - 56px);
            background-color: #f8f9fa;
            border-right: 1px solid #ddd;
            padding: 1rem;
            transition: width 0.3s ease, padding 0.3s ease;
            overflow-x: hidden;
            z-index: 1040;
        }

        .form-select {
            width: 175px;
        }

        .form-check {
            width: fit-content;
        }

        #sidebar.collapsed {
            width: 50px;
            padding-left: 0.4rem;
            padding-right: 0.4rem;
        }

            #sidebar.collapsed h5,
            #sidebar.collapsed ul.nav {
                display: none;
            }

        #main {
            margin-left: 220px;
            padding: 1rem;
            transition: margin-left 0.3s ease;
            display: flex;
            gap: 2rem;
        }

        #sidebar.collapsed + #main {
            margin-left: 50px;
        }

        #solPanel {
            flex: 1;
            max-width: 350px;
            border-right: 1px solid #ddd;
            padding-right: 1rem;
            width: fit-content;
            max-width: fit-content;
        }



        #sagPanel {
            flex: 2;
            overflow-x: auto;
        }

        .hamburger-mini {
            cursor: pointer;
            display: flex;
            flex-direction: column;
            justify-content: center;
            padding-left: 0.5rem;
        }

            .hamburger-mini div {
                width: 20px;
                height: 2px;
                background-color: #333;
                margin: 3px 0;
            }


        #sagPanel {
            flex: 2;
            overflow-x: hidden;
        }

        #tabloContainer {
            height: 400px;
            overflow-y: auto;
            flex: 2;
        }

        #raporChart {
            flex: 1;
        }

        #solPanel h4 {
            font-weight: 400;
               border-bottom: 1px solid #ccc;
                padding-bottom: 5px;
        }

        #taslaklarMenu {
            text-decoration: none !important;
            font-weight: 500;
            color: #0d6efd;
            cursor: pointer;
        }

        #taslakAltListe {
            display: none;
            position: relative;
            background-color: #fff;
            border-radius: 8px;
            padding: 5px 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }


        li:hover > #taslakAltListe {
            display: block;
        }

            
        #taslakAltListe .list-group-item {
            background-color: #f8f9fa;
            border: none;
            padding: 6px 12px;
            font-size: 0.9rem;
            color: #333;
            border-radius: 6px;
            margin-bottom: 4px;
            transition: background-color 0.2s;
        }

            #taslakAltListe .list-group-item:hover {
                background-color: #e2e6ea;
                color: #0d6efd;
                font-weight: 500;
                cursor: pointer;
            }

        #kpiContainer {
            display: flex;
            justify-content: center;
            align-items: start; /* <-- KPI ve pie chart hizalaması */
            gap: 2rem;
            flex-wrap: wrap;
            padding: 1rem 2rem;
        }

        .kpi-card {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            width: 140px; 
            text-align: center;
            padding: 1rem;
        }

        #countryPieChart {
            width: 450px; 
            height: 400px;
        }



    </style>
</head>

<body>

    <!-- Navbar -->
    <nav class="navbar navbar-dark bg-dark fixed-top">
        <div class="container-fluid">
            <span class="navbar-brand">Rapor Paneli</span>
        </div>
    </nav>

    <!-- Sidebar -->
    <div id="sidebar">
        <div class="d-flex align-items-center justify-content-between mb-3">
            <h5 class="mb-0">Raporlar</h5>
            <div id="innerHamburger" class="hamburger-mini" title="Menüyü daralt">
                <div></div>
                <div></div>
                <div></div>
            </div>
        </div>
        <ul class="nav flex-column">
            <li class="nav-item"><a class="nav-link" href="#">Finans</a></li>
            <li class="nav-item"><a class="nav-link" href="#">Lojistik</a></li>
            <li class="nav-item"><a class="nav-link" href="#">Üretim</a></li>
            <li class="nav-item"><a class="nav-link" href="#">Cari</a></li>
            <li>
                <a href="#" id="taslaklarMenu">Rapor Taslakları</a>
                <ul id="taslakAltListe" class="list-group list-unstyled ms-3 mt-1"></ul>
            </li>
        </ul>
    </div>
    



    <!-- Main -->
    <div id="main">
        <div id="solPanel" style="display:none;"></div>
        <div id="sagPanel" style="display:none;" class="d-flex gap-3">
            <div id="tabloContainer">
                <h4>Raporlar</h4>
                <input type="text" id="tabloAra" class="form-control mb-3" placeholder="Arama yapın..." />
                <button style="margin-bottom:10px;" id="excelAktar" class="btn btn-outline-success d-none" title="Excel'e Aktar">
                    <i data-feather="file-text" style="width:20px; height:20px;"></i>
                </button>

                <table class="table table-bordered" id="raporTablosu">
                    <thead>
                        <tr id="tabloBaslik"></tr>
                    </thead>
                    <tbody id="tabloGovde"></tbody>
                </table>
            </div>
            <div id="raporChart" style="flex:1; height: 400px; display: none;"></div>
        </div>

    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/feather-icons"></script>
    <script>
        feather.replace(); 
        const innerHamburger = document.getElementById("innerHamburger");
        const sidebar = document.getElementById("sidebar");
        const solPanel = document.getElementById("solPanel");
        const sagPanel = document.getElementById("sagPanel");
        const tabloAra = document.getElementById("tabloAra");
        const tabloBaslik = document.getElementById("tabloBaslik");
        const tabloGovde = document.getElementById("tabloGovde");
        const raporChartDiv = document.getElementById("raporChart");


        const tarihBasInput = document.getElementById('tarihBas');
        const tarihBitInput = document.getElementById('tarihBit');
        const grafikGosterBtn = document.getElementById('grafikGosterBtn');

        let apexChart = null;
        let aktifRapor = null;
        
       


        innerHamburger.addEventListener("mouseenter", () => {
            sidebar.classList.add("collapsed");
        });

        sidebar.addEventListener("mouseenter", () => {
            sidebar.classList.remove("collapsed");
        });

        document.querySelectorAll("#sidebar .nav-link").forEach(link => {
            link.addEventListener("click", (e) => {
                kpiKapat();
                $("#tabloAra").show();
                $("#tabloContainer h4").show();
                $("#tabloContainer button").show();
                e.preventDefault();
             
                let raporAd = e.target.textContent.trim();
                if (raporAd === "Üretim") raporAd = "Uretim";
                aktifRapor = raporAd;
                solPanel.style.display = "block";
                sagPanel.style.display = "none";
                raporChartDiv.style.display = "none";
                loadSutunPanel(aktifRapor);

               
            });
        });

        solPanel.innerHTML = ""; //  Eski içerikleri temizle


        $(document).on("click", "#taslaklarMenu", function (e) {
            e.preventDefault();
            kpiKapat();
            $("#tabloAra").show();
            $("#tabloContainer h4").hide();
            $("#tabloContainer button").show();
          

            // Panel görünürlükleri ayarlanıyor
            solPanel.style.display = "none";
            sagPanel.style.display = "none";
            raporChartDiv.style.display = "none";

            // Taslakları getir
            $.get('/Raporlar/TumTaslaklariGetir', function (taslaklar) {
                let html = "";

                taslaklar.forEach(t => {
                    html += `
                        <li class="list-group-item p-1 ps-2"
                            style="cursor: pointer;"
                            data-id="${t.taslakID}"
                            data-rapor="${t.raporAdi}">
                            ${t.taslakAdi} <small class="text-muted">(${t.raporAdi})</small>
                        </li>`;
                });

                $("#taslakAltListe").html(html);
            });
        });





        function loadSutunPanel(raporAdi) {
            if (apexChart) {
                apexChart.destroy();
                apexChart = null;
            }

            let sutunlar = [];
            if (raporAdi === "Finans") {
                sutunlar = ["OrderID", "CustomerID", "EmployeeID", "OrderDate", "ProductName", "UnitPrice"];
            } else if (raporAdi === "Lojistik") {
                sutunlar = ["OrderID", "ShipName", "ShipAddress", "ShipCity", "ShipCountry", "ShipperName"];
            } else if (raporAdi === "Uretim") {
                sutunlar = ["ProductID", "ProductName", "CategoryName", "UnitsInStock"];
            } else if (raporAdi === "Cari") {
                sutunlar = ["CustomerID", "CompanyName", "ContactName", "Phone"];
            }

            let html = `
                                <h4>Taslak Seç</h4>
                                <select class="form-select mb-3" id="taslakSelect">
                                    <option value="">Taslak seçin...</option>
                                </select>
                                <div class="mb-3 d-flex gap-2">
                                    <button id="taslakKaydetBtn" class="btn btn-success btn-sm">Taslak Kaydet</button>
                                    <button id="taslakSilBtn" class="btn btn-danger btn-sm">Taslak Sil</button>
                                </div>
                                <h4>${raporAdi} Sütunları</h4>`;

            sutunlar.forEach(s => {
                html += `
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="${s}" id="col_${s}" checked />
                                        <label class="form-check-label" for="col_${s}">${s}</label>
                                    </div>`;
            });

            if (raporAdi === "Finans" || raporAdi === "Lojistik") {
                html += `
                    <h4 class="mt-4">Tarih Aralığı</h4>
            <div class="mb-2">
                <label for="tarihBasSol" class="form-label">Başlangıç Tarihi</label>
                <input type="date" class="form-control" id="tarihBasSol" />
            </div>
            <div class="mb-3">
                <label for="tarihBitSol" class="form-label">Bitiş Tarihi</label>
                <input type="date" class="form-control" id="tarihBitSol" />
            </div>
        `;
            }


            if (raporAdi === "Uretim") {
                html += `
                                    <button id="raporAlBtn" class="btn btn-primary mt-3 me-2">Rapor Al</button>
                                    <button id="grafikAlBtn" class="btn btn-success mt-3">Grafikle Göster</button>`;
            } else if (raporAdi === "Finans") {
                html += `
                        <button id="raporAlBtn" class="btn btn-primary mt-3 me-2">Rapor Al</button>
                                <button type="button" id="grafikGosterBtn" class="btn btn-success mt-3" >Grafikle Göster</button>`;
            }
            else {
                html += `<button id="raporAlBtn" class="btn btn-primary mt-3">Rapor Al</button>`;
            }

            solPanel.innerHTML = html;

            // tarih inputları DOM'a eklendikten sonra bugün tarihi set edilmeli
            if (raporAdi === "Finans" || raporAdi === "Lojistik") {
                setTimeout(() => {
                    const today = new Date().toISOString().split('T')[0];
                    const basInput = document.getElementById("tarihBasSol");
                    const bitInput = document.getElementById("tarihBitSol");
                    if (basInput) basInput.value = today;
                    if (bitInput) bitInput.value = today;
                }, 0); // 0 ms bile yeterli
            }



            // TASLAKLARI GETİR (sayfa yüklenince)
            $.get('/Raporlar/TaslaklariGetir?raporAdi=' + raporAdi, function (liste) {
                const ddl = document.getElementById("taslakSelect");
                ddl.innerHTML = '<option value="">Taslak seçin...</option>';
                liste.forEach(x => {
                    ddl.innerHTML += `<option value="${x.taslakID}">${x.taslakAdi}</option>`;
                });

               
            });

            


        }

        $(document).on("click", "#excelAktar", function () {
            const table = document.getElementById("raporTablosu");
            if (!table) {
                alert("Aktarılacak tablo bulunamadı!");
                return;
            }

            const workbook = XLSX.utils.table_to_book(table, { sheet: "Rapor" });
            XLSX.writeFile(workbook, "Rapor.xlsx");
        });


        $(document).on("change", "#taslakSelect", function () {
            const taslakID = $(this).val();
            if (!taslakID) return;

            $.get('/Raporlar/TaslakDetay?taslakID=' + taslakID, function (data) {
                console.log("Gelen Taslak:", data);

                let sutunlarArray;

                try {
                    sutunlarArray = typeof data.sutunlar === "string"
                        ? JSON.parse(data.sutunlar)
                        : data.sutunlar;
                } catch (e) {
                    console.error("Sütunları parse edemedik", e);
                    return;
                }

                if (!Array.isArray(sutunlarArray)) {
                    console.warn("Sütunlar array formatında değil:", sutunlarArray);
                    return;
                }

                const normalized = sutunlarArray.map(x => x.trim().toLowerCase());

                // checkbox'lar DOM'da hazır mı kontrol et (DOM ready ise uygula)
                const checkboxlar = $("#solPanel input[type=checkbox]");
                if (!checkboxlar.length) {
                    console.warn("Checkboxlar henüz yüklenmedi.");
                    return;
                }

                checkboxlar.prop("checked", false);

                checkboxlar.each(function () {
                    const val = $(this).val().trim().toLowerCase();
                    if (normalized.includes(val)) {
                        $(this).prop("checked", true);
                    }
                });
            });
        });



        document.addEventListener("click", function (e) {
            if (e.target && e.target.id === "raporAlBtn") {
                filtreVeriVeTabloGoster(false); // her raporda çağır
            }

            if (e.target && (e.target.id === "grafikAlBtn" || e.target.id === "grafikGosterBtn")) {
                filtreVeriVeTabloGoster(true);
            }
        });


        function filtreVeriVeTabloGoster(grafikMi = false) {
            let data = {};
            if (aktifRapor !== "Uretim" && aktifRapor !== "Cari") {
                const tarihBasInputSol = document.getElementById("tarihBasSol");
                const tarihBitInputSol = document.getElementById("tarihBitSol");
                const basTarih = tarihBasInputSol?.value ? tarihBasInputSol.value + "T00:00:00" : null;
                const bitTarih = tarihBitInputSol?.value ? tarihBitInputSol.value + "T23:59:59" : null;

                if (!basTarih || !bitTarih || basTarih > bitTarih) {
                    alert("Tarihleri düzgün girin.");
                    return;
                }
                data.BaslangicTarihi = basTarih;
                data.BitisTarihi = bitTarih;

            }
            const secilenSutunlar = Array.from(
                document.querySelectorAll("#solPanel input[type=checkbox]:checked")
            ).map(cb => cb.value);

            $.ajax({
                url: '/Raporlar/' + aktifRapor + '_veri_cek',
                type: 'GET',
                data: data,
                success: function (veri) {
                    tabloyuDoldur(veri, secilenSutunlar, grafikMi);
                    if (grafikMi && aktifRapor === "Finans") {
                        getFinansGrafikData(data.BaslangicTarihi, data.BitisTarihi);
                    }
                    if (grafikMi && aktifRapor === "Uretim") {
                        renderUretimGrafik(veri);
                    }
                },
                error: function () {
                    alert("Veri çekerken hata oluştu!");
                }
            });
        }

        function getFinansGrafikData(basTarih, bitTarih) {
            $.ajax({
                url: '/Raporlar/Finans_Grafik_veri_cek',
                type: 'GET',
                data: { BaslangicTarihi: basTarih, BitisTarihi: bitTarih },
                success: function (data) {
                    raporChartDiv.style.display = "block";

                    const etiketler = data.map(x => {
                        if (!x.orderDate) return "";
                        const parts = x.orderDate.split(" ")[0].split(".");
                        return `${parts[2]}-${parts[1].padStart(2, "0")}-${parts[0].padStart(2, "0")}`;
                    });


                    const miktarlar = data.map(x => x.totalUnitPrice || 0);

                    const chartOptions = {
                        chart: { type: 'line', height: 400 },
                        series: [{ name: 'Toplam UnitPrice', data: miktarlar }],
                        xaxis: { categories: etiketler },
                        title: {
                            text: "Tarihsel Total UnitPrice", align: "left",
                            style: {
                                fontSize: '12px'
                            }
                        }
                    };

                    if (apexChart) apexChart.destroy();
                    apexChart = new ApexCharts(raporChartDiv, chartOptions);
                    apexChart.render();
                },
                error: function () {
                    alert("Grafik verisi alınamadı!");
                }
            });
        }


        function renderUretimGrafik(data) {
            raporChartDiv.style.display = "block";
            const etiketler = data.map(x => x.ProductName);
            const miktarlar = data.map(x => x.UnitsInStock);
            const chartOptions = {
                chart: { type: 'bar', height: 400 },
                series: [{ name: 'UnitsInStock', data: miktarlar }],
                xaxis: { categories: etiketler },
                title: { text: "Ürüne Göre Stok Durumu", align: "left" }
            };
            if (apexChart) apexChart.destroy();
            apexChart = new ApexCharts(raporChartDiv, chartOptions);
            apexChart.render();
        }

        function tabloyuDoldur(veri, secilenSutunlar, grafikMi) {
            if (!veri || veri.length === 0) {
                alert("Kayıt bulunamadı.");
                return;
            }
            tabloBaslik.innerHTML = "";
            secilenSutunlar.forEach(sutun => {
                const th = document.createElement("th");
                th.textContent = sutun;
                tabloBaslik.appendChild(th);
            });
            tabloGovde.innerHTML = "";
            veri.forEach(item => {
                const tr = document.createElement("tr");
                secilenSutunlar.forEach(sutun => {
                    const td = document.createElement("td");
                    td.textContent = item[sutun] || item[sutun.toLowerCase()] || item[sutun.toUpperCase()] || "";

                    tr.appendChild(td);
                });
                tabloGovde.appendChild(tr);
            });
            sagPanel.style.display = "block";
            $('#excelAktar').removeClass('d-none');
        }

        tabloAra.addEventListener("input", () => {
            const filtre = tabloAra.value.toLowerCase();
            Array.from(tabloGovde.rows).forEach(row => {
                row.style.display = row.textContent.toLowerCase().includes(filtre) ? "" : "none";
            });
        });


        // Taslak Kaydet butonuna tıklanınca çalışacak
        $(document).on("click", "#taslakKaydetBtn", function () {
            const taslakAdi = prompt("Taslak adı gir:");
            if (!taslakAdi) {
                alert("Taslak adı girilmedi.");
                return;
            }

            const secilenSutunlar = Array.from(
                document.querySelectorAll("#solPanel input[type=checkbox]:checked")
            ).map(cb => cb.value);

            const baslangicTarihi = document.getElementById("tarihBasSol")?.value || null;
    const bitisTarihi = document.getElementById("tarihBitSol")?.value || null;

            $.ajax({
                url: '/Raporlar/TaslakKaydet',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    KullaniciID: null,
                    RaporAdi: aktifRapor,
                    TaslakAdi: taslakAdi,
                    SecilenSutunlar: secilenSutunlar,
                    BaslangicTarihi: document.getElementById("tarihBasSol")?.value || null,
                    BitisTarihi: document.getElementById("tarihBitSol")?.value || null
                }),
                success: function (res) {
                    alert("Taslak kaydedildi!");
                    // Kaydettikten sonra listeyi güncelle
                    $.get('/Raporlar/TaslaklariGetir?raporAdi=' + aktifRapor, function (liste) {
                        const ddl = document.getElementById("taslakSelect");
                        ddl.innerHTML = '<option value="">Taslak seçin...</option>';
                        liste.forEach(x => {
                            ddl.innerHTML += `<option value="${x.taslakID}">${x.taslakAdi}</option>`;
                        });
                    });
                },
                error: function () {
                    alert("Taslak kaydedilirken hata oluştu!");
                }
            });
        });

        $(document).on("click", "#taslakSilBtn", function () {
            const taslakID = $("#taslakSelect").val();

            if (!taslakID) {
                alert("Silmek için önce bir taslak seçin!");
                return;
            }

            if (!confirm("Seçili taslak silinsin mi?")) {
                return;
            }

            $.post("/Raporlar/TaslakSil", { taslakID: taslakID }, function (res) {
                if (res.success) {
                    alert("Taslak silindi!");
                    $("#taslakSelect").val(""); // dropdown temizle

                    //  Dropdown ve sol listeyi güncelle
                    $.get('/Raporlar/TaslaklariGetir?raporAdi=' + aktifRapor, function (liste) {
                        const ddl = document.getElementById("taslakSelect");
                        ddl.innerHTML = '<option value="">Taslak seçin...</option>';
                        liste.forEach(x => {
                            ddl.innerHTML += `<option value="${x.taslakID}">${x.taslakAdi}</option>`;
                        });
                    });

                    guncelleTaslakListesi(); //  sol listeyi güncelle
                } else {
                    alert("Silme başarısız.");
                }
            });
        });


        function guncelleTaslakListesi() {
            $.get('/Raporlar/TumTaslaklariGetir', function (taslaklar) {
                let html = '';
                taslaklar.forEach(t => {
                    html += `
                        <li class="list-group-item list-group-item-action"
                             data-rapor="${t.raporAdi}"
                             data-id="${t.taslakID}"
                             style="cursor:pointer;">
                             ${t.taslakAdi} <small class="text-muted">(${t.raporAdi})</small>
                        </li>`;
                });
                $("#taslakAltListe").html(html);
            });
        }
        
        function pieChartYukle() {
            $.get("/Raporlar/UlkelereGoreSiparisGetir", function (data) {
                const ulkeler = data.map(x => x.ulke);
                const siparisler = data.map(x => x.siparisSayisi);

                var options = {
                    chart: {
                        type: 'pie',
                        height: 350
                    },
                    series: siparisler,
                    labels: ulkeler,
                    title: {
                        text: "Ülkelere Göre Sipariş Dağılımı"
                    }
                };

                var chart = new ApexCharts(document.querySelector("#countryPieChart"), options);
                chart.render();
            });
        }

       


        $(document).on("click", "#taslakAltListe .list-group-item", function () {
            kpiKapat();
            $("#tabloAra").show();
            $("#tabloContainer h4").show();
            $("#tabloContainer button").show();
            const taslakID = $(this).data("id");
            const raporAdi = $(this).data("rapor");

            aktifRapor = raporAdi;
            const raporAdiFormatted = raporAdi.charAt(0).toUpperCase() + raporAdi.slice(1).toLowerCase();

            solPanel.style.display = "none";
            sagPanel.style.display = "block";
          


            $.get('/Raporlar/TaslakDetay?taslakID=' + taslakID, function (res) {
                let secilenSutunlar;
                try {
                    secilenSutunlar = typeof res.Sutunlar === "string" ? JSON.parse(res.Sutunlar) : res.Sutunlar;
                } catch (e) {
                    console.error("Sütunlar parse edilemedi:", e);
                    return;
                }


                const basTarih = res.BaslangicTarihi ? res.BaslangicTarihi + "T00:00:00" : null;
                const bitTarih = res.BitisTarihi ? res.BitisTarihi + "T23:59:59" : null;

                let data = {};
                if (raporAdiFormatted !== "Uretim" && raporAdiFormatted !== "Cari") {
                    if (basTarih) data.BaslangicTarihi = basTarih;
                    if (bitTarih) data.BitisTarihi = bitTarih;
                }

                $.ajax({
                    url: '/Raporlar/' + raporAdiFormatted + '_veri_cek',
                    type: 'GET',
                    data: data,
                    success: function (data) {
                        /*const sutunlar = Object.keys(data[0]); // ya da önceden tanımlanmış array
                        tabloyuDoldur(data, sutunlar, false); */

                        const secilenSutunlar = Array.isArray(res.sutunlar)
                            ? res.sutunlar
                            : JSON.parse(res.sutunlar);

                        tabloyuDoldur(data, secilenSutunlar, false);


                    }
                });
            });
        });

        function aylikSiparisGrafikCiz() {
            $.get("/Raporlar/AylaraGoreSiparisGetir", function (data) {
                const aylar = data.map(x => x.ay);
                const sayilar = data.map(x => x.siparisSayisi);

                var options = {
                    chart: {
                        type: 'bar',
                        height: 400
                    },
                    series: [{
                        name: 'Sipariş Sayısı',
                        data: sayilar
                    }],
                    xaxis: {
                        categories: aylar
                    },
                    title: {
                        text: "Aylara Göre Sipariş Sayısı",
                        align: 'left'
                    }
                };

                var chart = new ApexCharts(document.querySelector("#monthlyOrderChart"), options);
                chart.render();
            });
        }


        function kpiYukle() {
            if ($("#kpiContainer").length > 0) return; // Zaten ekliyse tekrar ekleme

            const html = `
            <div id="kpiContainer" class="d-flex justify-content-center gap-4 mb-4 px-3">
                <div class="bg-light border rounded shadow-sm p-3 text-center" style="width: 180px;">
                    <div style="font-size: 2rem;">👤</div>
                    <div class="fw-bold fs-4 text-primary" id="kpiMusteri">123</div>
                    <small class="text-muted">Müşteri Sayısı</small>
                </div>
                <div class="bg-light border rounded shadow-sm p-3 text-center" style="width: 180px;">
                    <div style="font-size: 2rem;">📦</div>
                    <div class="fw-bold fs-4 text-danger" id="kpiStok">8</div>
                    <small class="text-muted">Kritik Stok</small>
                </div>
                <div class="bg-light border rounded shadow-sm p-3 text-center" style="width: 180px;">
                    <div style="font-size: 2rem;">🌍</div>
                    <div class="fw-bold fs-4 text-success" id="kpiUlke">USA</div>
                    <small class="text-muted">En Yoğun Ülke</small>
                </div>

                         <div class="container">
                <div class="row">
                    <div class="col-md-6">
                        <div id="countryPieChart" class="my-4"></div>
                    </div>
                    <div class="col-md-6">
                        <div id="monthlyOrderChart" class="my-4"></div>
                    </div>
                </div>
            </div>

            </div>
            `;

            $(html).insertBefore("#main"); // KPI'ları ana içeriğin önüne ekle
        }


        $(document).ready(function () {
            kpiYukle(); // KPI'ları sayfa ilk açıldığında DOM'a ekle
            $("#tabloAra").hide();
            $("#tabloContainer h4").hide();
            $("#tabloContainer button").hide();

            pieChartYukle();
            aylikSiparisGrafikCiz();
        });

        function kpiKapat() {
            $("#kpiContainer").remove(); // KPI'ları DOM'dan kaldır
        }

        $.get("/Raporlar/KpiVerileriGetir", function (data) {
            $("#kpiMusteri").text(data.musteri);
            $("#kpiStok").text(data.stok);
            $("#kpiUlke").text(data.ulke);
        });


    </script>
</body>

</html>